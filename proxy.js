// proxy.js ‚Äî‚Äî ÁéØÂ¢ÉÁõëÊµã‰ª£ÁêÜÂô®ÔºàÂ¢ûÂº∫ÁâàÔºâ

// üéØ Á≠æÂêçÂ≠óÂÖ∏ÔºöÂëäËØâ‰ª£ÁêÜÂô®‚ÄúÊüê‰∏™Â±ûÊÄßÂ∫îËØ•ÊòØ‰ªÄ‰πàÁ±ªÂûã‚Äù
const BROWSER_API_SIGNATURES = {
  window: {
    window: "object",
    self: "object",
    document: "object",
    name: "string",
    location: "object",
    customElements: "object",
    history: "object",
    navigation: "object",
    locationbar: "object",
    menubar: "object",
    personalbar: "object",
    scrollbars: "object",
    statusbar: "object",
    toolbar: "object",
    status: "string",
    closed: "boolean",
    frames: "object",
    length: "number",
    top: "object",
    opener: "object",
    parent: "object",
    frameElement: "object",
    navigator: "object",
    origin: "string",
    external: "object",
    screen: "object",
    innerWidth: "number",
    innerHeight: "number",
    scrollX: "number",
    pageXOffset: "number",
    scrollY: "number",
    pageYOffset: "number",
    visualViewport: "object",
    screenX: "number",
    screenY: "number",
    outerWidth: "number",
    outerHeight: "number",
    devicePixelRatio: "number",
    event: "undefined",
    clientInformation: "object",
    screenLeft: "number",
    screenTop: "number",
    styleMedia: "object",
    onsearch: "object",
    trustedTypes: "object",
    performance: "object",
    onappinstalled: "object",
    onbeforeinstallprompt: "object",
    crypto: "object",
    indexedDB: "object",
    sessionStorage: "object",
    localStorage: "object",
    onbeforexrselect: "object",
    onabort: "object",
    onbeforeinput: "object",
    onbeforematch: "object",
    onbeforetoggle: "object",
    onblur: "object",
    oncancel: "object",
    oncanplay: "object",
    oncanplaythrough: "object",
    onchange: "object",
    onclick: "object",
    onclose: "object",
    oncommand: "object",
    oncontentvisibilityautostatechange: "object",
    oncontextlost: "object",
    oncontextmenu: "object",
    oncontextrestored: "object",
    oncuechange: "object",
    ondblclick: "object",
    ondrag: "object",
    ondragend: "object",
    ondragenter: "object",
    ondragleave: "object",
    ondragover: "object",
    ondragstart: "object",
    ondrop: "object",
    ondurationchange: "object",
    onemptied: "object",
    onended: "object",
    onerror: "object",
    onfocus: "object",
    onformdata: "object",
    oninput: "object",
    oninvalid: "object",
    onkeydown: "object",
    onkeypress: "object",
    onkeyup: "object",
    onload: "object",
    onloadeddata: "object",
    onloadedmetadata: "object",
    onloadstart: "object",
    onmousedown: "object",
    onmouseenter: "object",
    onmouseleave: "object",
    onmousemove: "object",
    onmouseout: "object",
    onmouseover: "object",
    onmouseup: "object",
    onmousewheel: "object",
    onpause: "object",
    onplay: "object",
    onplaying: "object",
    onprogress: "object",
    onratechange: "object",
    onreset: "object",
    onresize: "object",
    onscroll: "object",
    onscrollend: "object",
    onsecuritypolicyviolation: "object",
    onseeked: "object",
    onseeking: "object",
    onselect: "object",
    onslotchange: "object",
    onstalled: "object",
    onsubmit: "object",
    onsuspend: "object",
    ontimeupdate: "object",
    ontoggle: "object",
    onvolumechange: "object",
    onwaiting: "object",
    onwebkitanimationend: "object",
    onwebkitanimationiteration: "object",
    onwebkitanimationstart: "object",
    onwebkittransitionend: "object",
    onwheel: "object",
    onauxclick: "object",
    ongotpointercapture: "object",
    onlostpointercapture: "object",
    onpointerdown: "object",
    onpointermove: "object",
    onpointerrawupdate: "object",
    onpointerup: "object",
    onpointercancel: "object",
    onpointerover: "object",
    onpointerout: "object",
    onpointerenter: "object",
    onpointerleave: "object",
    onselectstart: "object",
    onselectionchange: "object",
    onanimationend: "object",
    onanimationiteration: "object",
    onanimationstart: "object",
    ontransitionrun: "object",
    ontransitionstart: "object",
    ontransitionend: "object",
    ontransitioncancel: "object",
    onafterprint: "object",
    onbeforeprint: "object",
    onbeforeunload: "object",
    onhashchange: "object",
    onlanguagechange: "object",
    onmessage: "object",
    onmessageerror: "object",
    onoffline: "object",
    ononline: "object",
    onpagehide: "object",
    onpageshow: "object",
    onpopstate: "object",
    onrejectionhandled: "object",
    onstorage: "object",
    onunhandledrejection: "object",
    onunload: "object",
    isSecureContext: "boolean",
    crossOriginIsolated: "boolean",
    scheduler: "object",
    alert: "function",
    atob: "function",
    blur: "function",
    btoa: "function",
    cancelAnimationFrame: "function",
    cancelIdleCallback: "function",
    captureEvents: "function",
    clearInterval: "function",
    clearTimeout: "function",
    close: "function",
    confirm: "function",
    createImageBitmap: "function",
    fetch: "function",
    find: "function",
    focus: "function",
    getComputedStyle: "function",
    getSelection: "function",
    matchMedia: "function",
    moveBy: "function",
    moveTo: "function",
    open: "function",
    postMessage: "function",
    print: "function",
    prompt: "function",
    queueMicrotask: "function",
    releaseEvents: "function",
    reportError: "function",
    requestAnimationFrame: "function",
    requestIdleCallback: "function",
    resizeBy: "function",
    resizeTo: "function",
    scroll: "function",
    scrollBy: "function",
    scrollTo: "function",
    setInterval: "function",
    setTimeout: "function",
    stop: "function",
    structuredClone: "function",
    webkitCancelAnimationFrame: "function",
    webkitRequestAnimationFrame: "function",
    chrome: "object",
    caches: "object",
    cookieStore: "object",
    ondevicemotion: "object",
    ondeviceorientation: "object",
    ondeviceorientationabsolute: "object",
    documentPictureInPicture: "object",
    sharedStorage: "object",
    fetchLater: "function",
    getScreenDetails: "function",
    queryLocalFonts: "function",
    showDirectoryPicker: "function",
    showOpenFilePicker: "function",
    showSaveFilePicker: "function",
    originAgentCluster: "boolean",
    viewport: "object",
    onpageswap: "object",
    onpagereveal: "object",
    credentialless: "boolean",
    fence: "object",
    launchQueue: "object",
    speechSynthesis: "object",
    onscrollsnapchange: "object",
    onscrollsnapchanging: "object",
    webkitRequestFileSystem: "function",
    webkitResolveLocalFileSystemURL: "function",
    $_ts: "object",
    t2ImprintLocation: "function",
    t2RecordImprint: "function",
    t2SearchImprint: "function",
    codeLocation: "function",
    logWithLoc: "function",
    hookProxy: "function",
    hookCookie: "function",
    $_7fddd7d: "function",
    TEMPORARY: "number",
    PERSISTENT: "number",
    addEventListener: "function",
    dispatchEvent: "function",
    removeEventListener: "function",
    when: "function"
  },
  document: {
    location: "object",
    implementation: "object",
    URL: "string",
    documentURI: "string",
    compatMode: "string",
    characterSet: "string",
    charset: "string",
    inputEncoding: "string",
    contentType: "string",
    doctype: "object",
    documentElement: "object",
    xmlEncoding: "object",
    xmlVersion: "object",
    xmlStandalone: "boolean",
    domain: "string",
    referrer: "string",
    cookie: "string",
    lastModified: "string",
    readyState: "string",
    title: "string",
    dir: "string",
    body: "object",
    head: "object",
    images: "object",
    embeds: "object",
    plugins: "object",
    links: "object",
    forms: "object",
    scripts: "object",
    currentScript: "object",
    defaultView: "object",
    designMode: "string",
    onreadystatechange: "object",
    anchors: "object",
    applets: "object",
    fgColor: "string",
    linkColor: "string",
    vlinkColor: "string",
    alinkColor: "string",
    bgColor: "string",
    all: "undefined",
    scrollingElement: "object",
    onpointerlockchange: "object",
    onpointerlockerror: "object",
    hidden: "boolean",
    visibilityState: "string",
    wasDiscarded: "boolean",
    prerendering: "boolean",
    featurePolicy: "object",
    webkitVisibilityState: "string",
    webkitHidden: "boolean",
    onbeforecopy: "object",
    onbeforecut: "object",
    onbeforepaste: "object",
    onfreeze: "object",
    onprerenderingchange: "object",
    onresume: "object",
    onsearch: "object",
    onvisibilitychange: "object",
    timeline: "object",
    fullscreenEnabled: "boolean",
    fullscreen: "boolean",
    onfullscreenchange: "object",
    onfullscreenerror: "object",
    webkitIsFullScreen: "boolean",
    webkitCurrentFullScreenElement: "object",
    webkitFullscreenEnabled: "boolean",
    webkitFullscreenElement: "object",
    onwebkitfullscreenchange: "object",
    onwebkitfullscreenerror: "object",
    rootElement: "object",
    pictureInPictureEnabled: "boolean",
    onbeforexrselect: "object",
    onabort: "object",
    onbeforeinput: "object",
    onbeforematch: "object",
    onbeforetoggle: "object",
    onblur: "object",
    oncancel: "object",
    oncanplay: "object",
    oncanplaythrough: "object",
    onchange: "object",
    onclick: "object",
    onclose: "object",
    oncommand: "object",
    oncontentvisibilityautostatechange: "object",
    oncontextlost: "object",
    oncontextmenu: "object",
    oncontextrestored: "object",
    oncuechange: "object",
    ondblclick: "object",
    ondrag: "object",
    ondragend: "object",
    ondragenter: "object",
    ondragleave: "object",
    ondragover: "object",
    ondragstart: "object",
    ondrop: "object",
    ondurationchange: "object",
    onemptied: "object",
    onended: "object",
    onerror: "object",
    onfocus: "object",
    onformdata: "object",
    oninput: "object",
    oninvalid: "object",
    onkeydown: "object",
    onkeypress: "object",
    onkeyup: "object",
    onload: "object",
    onloadeddata: "object",
    onloadedmetadata: "object",
    onloadstart: "object",
    onmousedown: "object",
    onmouseenter: "object",
    onmouseleave: "object",
    onmousemove: "object",
    onmouseout: "object",
    onmouseover: "object",
    onmouseup: "object",
    onmousewheel: "object",
    onpause: "object",
    onplay: "object",
    onplaying: "object",
    onprogress: "object",
    onratechange: "object",
    onreset: "object",
    onresize: "object",
    onscroll: "object",
    onscrollend: "object",
    onsecuritypolicyviolation: "object",
    onseeked: "object",
    onseeking: "object",
    onselect: "object",
    onslotchange: "object",
    onstalled: "object",
    onsubmit: "object",
    onsuspend: "object",
    ontimeupdate: "object",
    ontoggle: "object",
    onvolumechange: "object",
    onwaiting: "object",
    onwebkitanimationend: "object",
    onwebkitanimationiteration: "object",
    onwebkitanimationstart: "object",
    onwebkittransitionend: "object",
    onwheel: "object",
    onauxclick: "object",
    ongotpointercapture: "object",
    onlostpointercapture: "object",
    onpointerdown: "object",
    onpointermove: "object",
    onpointerrawupdate: "object",
    onpointerup: "object",
    onpointercancel: "object",
    onpointerover: "object",
    onpointerout: "object",
    onpointerenter: "object",
    onpointerleave: "object",
    onselectstart: "object",
    onselectionchange: "object",
    onanimationend: "object",
    onanimationiteration: "object",
    onanimationstart: "object",
    ontransitionrun: "object",
    ontransitionstart: "object",
    ontransitionend: "object",
    ontransitioncancel: "object",
    oncopy: "object",
    oncut: "object",
    onpaste: "object",
    children: "object",
    firstElementChild: "object",
    lastElementChild: "object",
    childElementCount: "number",
    activeElement: "object",
    styleSheets: "object",
    pointerLockElement: "object",
    fullscreenElement: "object",
    adoptedStyleSheets: "object",
    pictureInPictureElement: "object",
    fonts: "object",
    adoptNode: "function",
    append: "function",
    captureEvents: "function",
    caretPositionFromPoint: "function",
    caretRangeFromPoint: "function",
    clear: "function",
    close: "function",
    createAttribute: "function",
    createAttributeNS: "function",
    createCDATASection: "function",
    createComment: "function",
    createDocumentFragment: "function",
    createElement: "function",
    createElementNS: "function",
    createEvent: "function",
    createExpression: "function",
    createNSResolver: "function",
    createNodeIterator: "function",
    createProcessingInstruction: "function",
    createRange: "function",
    createTextNode: "function",
    createTreeWalker: "function",
    elementFromPoint: "function",
    elementsFromPoint: "function",
    evaluate: "function",
    execCommand: "function",
    exitFullscreen: "function",
    exitPictureInPicture: "function",
    exitPointerLock: "function",
    getAnimations: "function",
    getElementById: "function",
    getElementsByClassName: "function",
    getElementsByName: "function",
    getElementsByTagName: "function",
    getElementsByTagNameNS: "function",
    getSelection: "function",
    hasFocus: "function",
    hasStorageAccess: "function",
    hasUnpartitionedCookieAccess: "function",
    importNode: "function",
    moveBefore: "function",
    open: "function",
    prepend: "function",
    queryCommandEnabled: "function",
    queryCommandIndeterm: "function",
    queryCommandState: "function",
    queryCommandSupported: "function",
    queryCommandValue: "function",
    querySelector: "function",
    querySelectorAll: "function",
    releaseEvents: "function",
    replaceChildren: "function",
    requestStorageAccess: "function",
    requestStorageAccessFor: "function",
    startViewTransition: "function",
    webkitCancelFullScreen: "function",
    webkitExitFullscreen: "function",
    write: "function",
    writeln: "function",
    fragmentDirective: "object",
    browsingTopics: "function",
    hasPrivateToken: "function",
    hasRedemptionRecord: "function",
    onscrollsnapchange: "object",
    onscrollsnapchanging: "object",
    nodeType: "number",
    nodeName: "string",
    baseURI: "string",
    isConnected: "boolean",
    ownerDocument: "object",
    parentNode: "object",
    parentElement: "object",
    childNodes: "object",
    firstChild: "object",
    lastChild: "object",
    previousSibling: "object",
    nextSibling: "object",
    nodeValue: "object",
    textContent: "object",
    ELEMENT_NODE: "number",
    ATTRIBUTE_NODE: "number",
    TEXT_NODE: "number",
    CDATA_SECTION_NODE: "number",
    ENTITY_REFERENCE_NODE: "number",
    ENTITY_NODE: "number",
    PROCESSING_INSTRUCTION_NODE: "number",
    COMMENT_NODE: "number",
    DOCUMENT_NODE: "number",
    DOCUMENT_TYPE_NODE: "number",
    DOCUMENT_FRAGMENT_NODE: "number",
    NOTATION_NODE: "number",
    DOCUMENT_POSITION_DISCONNECTED: "number",
    DOCUMENT_POSITION_PRECEDING: "number",
    DOCUMENT_POSITION_FOLLOWING: "number",
    DOCUMENT_POSITION_CONTAINS: "number",
    DOCUMENT_POSITION_CONTAINED_BY: "number",
    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: "number",
    appendChild: "function",
    cloneNode: "function",
    compareDocumentPosition: "function",
    contains: "function",
    getRootNode: "function",
    hasChildNodes: "function",
    insertBefore: "function",
    isDefaultNamespace: "function",
    isEqualNode: "function",
    isSameNode: "function",
    lookupNamespaceURI: "function",
    lookupPrefix: "function",
    normalize: "function",
    removeChild: "function",
    replaceChild: "function",
    addEventListener: "function",
    dispatchEvent: "function",
    removeEventListener: "function",
    when: "function"
  },
  location: {
    ancestorOrigins: "object",
    href: "string",
    origin: "string",
    protocol: "string",
    host: "string",
    hostname: "string",
    port: "string",
    pathname: "string",
    search: "string",
    hash: "string",
    assign: "function",
    reload: "function",
    replace: "function",
    toString: "function"
  },
  navigator: {
    vendorSub: "string",
    productSub: "string",
    vendor: "string",
    maxTouchPoints: "number",
    scheduling: "object",
    userActivation: "object",
    geolocation: "object",
    doNotTrack: "object",
    connection: "object",
    plugins: "object",
    mimeTypes: "object",
    pdfViewerEnabled: "boolean",
    webkitTemporaryStorage: "object",
    webkitPersistentStorage: "object",
    windowControlsOverlay: "object",
    hardwareConcurrency: "number",
    cookieEnabled: "boolean",
    appCodeName: "string",
    appName: "string",
    appVersion: "string",
    platform: "string",
    product: "string",
    userAgent: "string",
    language: "string",
    languages: "object",
    onLine: "boolean",
    webdriver: "boolean",
    getGamepads: "function",
    javaEnabled: "function",
    sendBeacon: "function",
    vibrate: "function",
    deprecatedRunAdAuctionEnforcesKAnonymity: "boolean",
    protectedAudience: "object",
    bluetooth: "object",
    storageBuckets: "object",
    clipboard: "object",
    credentials: "object",
    keyboard: "object",
    managed: "object",
    mediaDevices: "object",
    storage: "object",
    serviceWorker: "object",
    virtualKeyboard: "object",
    wakeLock: "object",
    deviceMemory: "number",
    userAgentData: "object",
    login: "object",
    ink: "object",
    mediaCapabilities: "object",
    devicePosture: "object",
    hid: "object",
    locks: "object",
    gpu: "object",
    mediaSession: "object",
    permissions: "object",
    presentation: "object",
    serial: "object",
    usb: "object",
    xr: "object",
    adAuctionComponents: "function",
    runAdAuction: "function",
    canLoadAdAuctionFencedFrame: "function",
    canShare: "function",
    share: "function",
    clearAppBadge: "function",
    getBattery: "function",
    getUserMedia: "function",
    requestMIDIAccess: "function",
    requestMediaKeySystemAccess: "function",
    setAppBadge: "function",
    webkitGetUserMedia: "function",
    clearOriginJoinedAdInterestGroups: "function",
    createAuctionNonce: "function",
    joinAdInterestGroup: "function",
    leaveAdInterestGroup: "function",
    updateAdInterestGroups: "function",
    deprecatedReplaceInURN: "function",
    deprecatedURNToURL: "function",
    getInstalledRelatedApps: "function",
    getInterestGroupAdAuctionData: "function",
    registerProtocolHandler: "function",
    unregisterProtocolHandler: "function"
  },
  history: {
    length: "number",
    scrollRestoration: "string",
    state: "object",
    back: "function",
    forward: "function",
    go: "function",
    pushState: "function",
    replaceState: "function"
  },
  screen: {
    availWidth: "number",
    availHeight: "number",
    width: "number",
    height: "number",
    colorDepth: "number",
    pixelDepth: "number",
    availLeft: "number",
    availTop: "number",
    orientation: "object",
    onchange: "object",
    isExtended: "boolean",
    addEventListener: "function",
    dispatchEvent: "function",
    removeEventListener: "function",
    when: "function"
  },
  localStorage: {
    $_YWTU: "string",
    _$rc: "string",
    "__#classType": "string",
    $_YVTX: "string",
    length: "number",
    clear: "function",
    getItem: "function",
    key: "function",
    removeItem: "function",
    setItem: "function"
  },
  sessionStorage: {
    $_YWTU: "string",
    $_YVTX: "string",
    length: "number",
    clear: "function",
    getItem: "function",
    key: "function",
    removeItem: "function",
    setItem: "function"
  },
  Object: {

  },
  Array: {

  },
  Math: {

  },
  Date: {

  },
  JSON: {

  },
  console: {
    debug: "function",
    error: "function",
    info: "function",
    log: "function",
    warn: "function",
    dir: "function",
    dirxml: "function",
    table: "function",
    trace: "function",
    group: "function",
    groupCollapsed: "function",
    groupEnd: "function",
    clear: "function",
    count: "function",
    countReset: "function",
    assert: "function",
    profile: "function",
    profileEnd: "function",
    time: "function",
    timeLog: "function",
    timeEnd: "function",
    timeStamp: "function",
    context: "function",
    createTask: "function",
    memory: "object"
  },
  performance: {
    timeOrigin: "number",
    onresourcetimingbufferfull: "object",
    clearMarks: "function",
    clearMeasures: "function",
    clearResourceTimings: "function",
    getEntries: "function",
    getEntriesByName: "function",
    getEntriesByType: "function",
    mark: "function",
    measure: "function",
    setResourceTimingBufferSize: "function",
    toJSON: "function",
    now: "function",
    timing: "object",
    navigation: "object",
    memory: "object",
    eventCounts: "object",
    addEventListener: "function",
    dispatchEvent: "function",
    removeEventListener: "function",
    when: "function"
  },
  fetch: {

  },
  WebSocket: {
    CONNECTING: "number",
    OPEN: "number",
    CLOSING: "number",
    CLOSED: "number"
  },
  XMLHttpRequest: {
    UNSENT: "number",
    OPENED: "number",
    HEADERS_RECEIVED: "number",
    LOADING: "number",
    DONE: "number"
  }
};;

// üìä ÂÖ®Â±ÄÁº∫Â§±Êä•ÂëäÔºàÊúÄÂêéÁªü‰∏ÄËæìÂá∫Ôºâ
globalThis.__MISSING_REPORT = [];

// ÂØºÂÖ•ÁöÑÂ∫ìÂÜôÊúÄ‰∏äÈù¢

// ‰ª£ÁêÜÂô®Â∞ÅË£ÖÔºà‰øÆÂ§çÁâàÔºâ// üïµÔ∏è‚Äç‚ôÇÔ∏è ‰ª£ÁêÜÂáΩÊï∞
function get_environment(proxy_array) {
    // ÂàùÂßãÂåñÂÖ®Â±ÄÂèòÈáè
    if (!globalThis.__REPORTED) {
        globalThis.__REPORTED = {};
    }
    if (!globalThis.__MISSING_REPORT) {
        globalThis.__MISSING_REPORT = [];
    }

    const global = (function () { return this; })();

    for (let i = 0; i < proxy_array.length; i++) {
        const prop = proxy_array[i];
        let target;
        try {
            target = global[prop];
        } catch (e) {
            console.warn(`[Proxy] Êó†Ê≥ïËØªÂèñ ${prop}:`, e.message);
            target = {};
        }

        if (target == null) {
            console.warn(`[Proxy] ${prop} ‰∏çÂ≠òÂú®Ôºå‰ΩøÁî®Á©∫ÂØπË±°ÂÖúÂ∫ïËøõË°å‰ª£ÁêÜ`);
            target = {};
        }

        const handler = {
            get: function (target, property, receiver) {
                let value;
                try {
                    value = Reflect.get(target, property, receiver);
                } catch (e) {
                    value = undefined;
                }

                const propName = String(property);
                const expectedType = BROWSER_API_SIGNATURES[prop]?.[propName];
                const actualType = typeof value;
                const isMatch = actualType === expectedType;

                const key = `${prop}.${propName}`;

                // ‚úÖ Âè™Êä•Âëä‰∏ÄÊ¨°Áº∫Â§±
                if (value === undefined && expectedType && !globalThis.__REPORTED[key]) {
                    const missingTip = expectedType === 'function' ? 'ÔºàÁº∫Â§±ÊñπÊ≥ïÔºâ' : `ÔºàÁº∫Â§±${expectedType}Â±ûÊÄßÔºâ`;
                    globalThis.__MISSING_REPORT.push({
                        object: prop,
                        property: propName,
                        expectedType: expectedType
                    });
                    globalThis.__REPORTED[key] = true;
                    console.log(
                        "üîç get".padEnd(8),
                        "ÂØπË±°:", prop.padEnd(12),
                        "Â±ûÊÄß:", propName.padEnd(25),
                        "ÂÆûÈôÖ:", String(actualType).padEnd(8),
                        "È¢ÑÊúü:", String(expectedType || '‚Äî').padEnd(8),
                        "ÂåπÈÖç:", isMatch ? "‚úÖ" : `‚ùå${missingTip}`
                    );
                } else if (value === undefined && expectedType) {
                    // Â∑≤Êä•ÂëäËøáÔºå‰∏çÈáçÂ§çÊâìÂç∞
                    return value;
                }

                // ÂÖ∂‰ªñÊó•ÂøóÔºàÂèØÈÄâÔºâ
                console.log(
                    "üîç get".padEnd(8),
                    "ÂØπË±°:", prop.padEnd(12),
                    "Â±ûÊÄß:", propName.padEnd(25),
                    "ÂÆûÈôÖ:", String(actualType).padEnd(8),
                    "È¢ÑÊúü:", String(expectedType || '‚Äî').padEnd(8),
                    "ÂåπÈÖç:", isMatch ? "‚úÖ" : "‚ùå"
                );

                return value;
            },

            set: function (target, property, value, receiver) {
                let oldValueType = 'undefined';
                try {
                    if (Reflect.has(target, property)) {
                        const oldValue = Reflect.get(target, property, receiver);
                        oldValueType = typeof oldValue;
                    }
                } catch (e) {
                    oldValueType = 'unknown';
                }

                const result = Reflect.set(target, property, value, receiver);

                console.log(
                    "üìù set".padEnd(8),
                    "ÂØπË±°:", prop.padEnd(12),
                    "Â±ûÊÄß:", String(property).padEnd(25),
                    "ÂéüÁ±ªÂûã:", oldValueType.padEnd(8),
                    "Êñ∞Á±ªÂûã:", typeof value
                );

                return result;
            }
        };

        let proxy;
        try {
            proxy = new Proxy(target, handler);
        } catch (e) {
            console.warn(`[Proxy] ÂàõÂª∫ Proxy Â§±Ë¥• for ${prop}:`, e.message);
            proxy = new Proxy({}, handler);
        }

        try {
            global[prop] = proxy;
        } catch (e) {
            try {
                Object.defineProperty(global, prop, {
                    value: proxy,
                    writable: true,
                    configurable: true,
                    enumerable: true
                });
            } catch (e2) {
                console.warn(`[Proxy] Êó†Ê≥ïÊõøÊç¢ ${prop}Ôºå‰ª£ÁêÜÊú™ÁîüÊïà`);
            }
        }
    }

    if (globalThis.__MISSING_REPORT.length > 0) {
        console.log("\n" + "=".repeat(70));
        console.log("üìã Áº∫Â§±È°πÊ±áÊÄªÊä•Âëä ‚Äî‚Äî ËØ∑Êåâ‰ª•‰∏ãÈ°∫Â∫èË°•ÂÖ®ÁéØÂ¢ÉÔºö");
        console.log("=".repeat(70));
        globalThis.__MISSING_REPORT.forEach((item, index) => {
            console.log(
                `(${index + 1}) ‚ùå ${item.object}.${item.property}`.padEnd(45),
                `‚Üí Â∫îË°•: ${item.expectedType}`
            );
        });
        console.log("=".repeat(70));
    } else {
        console.log("\nüéâ ÊÅ≠ÂñúÔºÅÊú™ÂèëÁé∞Áº∫Â§±È°πÔºåÁéØÂ¢ÉÂÆåÊï¥Â∫¶ËâØÂ•ΩÔºÅ");
    }
}

// üéØ Ë¶Å‰ª£ÁêÜÁöÑÂØπË±°ÂàóË°®
const proxy_array = [
    'window',
    'document',
    'location',
    'navigator',
    'history',
    'screen',
    'Object',
    'localStorage'
];


// üöÄ ÂØºÂá∫ÂáΩÊï∞ÔºàNode.js Áî®Ôºâ
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { get_environment };
}